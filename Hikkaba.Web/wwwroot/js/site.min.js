window.navigationFn={goToSection:function(e){$("html, body").animate({scrollTop:$("#"+e).offset().top},0)}},window.getSelectionText=function getSelectionText2(){return window.getSelection?window.getSelection().toString():""},window.writeSelectionLineToInput=function writeSelectionLineToInput2(e){const t=document.getElementById(e);if(void 0!==t){getSelectionText()&&(t.value+="[quote]"+getSelectionText()+"[/quote]\n")}},window.writeLineToInput=function writeLineToInput2(e,t){const n=document.getElementById(e);void 0!==n&&(n.value+=t+"\n")},window.wrapText=function wrapText2(e,t,n){const o=document.getElementById(e);if(void 0!==o.selectionStart){const e=o.value.substring(0,o.selectionStart),i=o.value.substring(o.selectionStart,o.selectionEnd),a=o.value.substring(o.selectionEnd);o.value=e+t+i+n+a}},window.insertTag=function insertTag(e,t){switch(t){case"m-bold":wrapText(e,"[b]","[/b]");break;case"m-italic":wrapText(e,"[i]","[/i]");break;case"m-underline":wrapText(e,"[u]","[/u]");break;case"m-strikeout":wrapText(e,"[s]","[/s]");break;case"m-quote":wrapText(e,"[quote]","[/quote]");break;case"m-spoiler":wrapText(e,"[spoiler]","[/spoiler]");break;case"m-code":wrapText(e,"[code]","[/code]");break;case"m-subscript":wrapText(e,"[sub]","[/sub]");break;case"m-superscript":wrapText(e,"[sup]","[/sup]")}},$((function(){$("time.time-localizable").each((function(){const e=$(this),t=moment(e.attr("datetime"));e.text(t.format("YYYY-MM-DD ddd HH:mm:ss"))}));const e="Message";if($("#"+e).length){const t=$(".post-id-link");t.attr("onclick","return false;"),t.click((function(){const t=document.getElementById(e);if(void 0!==t){const e=t.value;if(e.length>0){"\n"!==e.charAt(e.length-1)&&(t.value+="\n")}}const n=$(this);writeLineToInput(e,">>"+n.text(),""),writeSelectionLineToInput(e),navigationFn.goToSection(e),void 0!==t&&t.focus()}))}}));const e=new Set,t=document.querySelectorAll(".datetimepicker-utc"),handleSubmit=e=>{const t=e.target;t.querySelectorAll(".datetimepicker-utc").forEach((e=>{const n=e.name;if(!n)return;const o=e.value;if(o){const i=new Date(o);if(isNaN(i.getTime()))console.warn(`JS Warning: Invalid date for field named "${n}". Submitting original value.`);else{const o=i.toISOString(),a=document.createElement("input");a.type="hidden",a.value=o,a.name=n,t.appendChild(a),e.removeAttribute("name"),console.log(`JS Info: Created hidden input named "${a.name}" with UTC value "${o}". Original input "${n}" name removed.`)}}else console.log(`JS Info: Field "${n}" is empty. Submitting as is.`)}))};t.forEach((t=>{const n=t.closest("form");n&&!e.has(n)&&(n.addEventListener("submit",handleSubmit),e.add(n),console.log(`JS Setup: Attached UTC date handler to form#${n.id||"[no id]"}.`))}));
//# sourceMappingURL=site.min.js.map
