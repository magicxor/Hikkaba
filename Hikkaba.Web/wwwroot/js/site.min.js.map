{"version":3,"file":"site.min.js","mappings":"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","sources":["webpack:///./js/site.js"],"sourcesContent":["// Please see documentation at https://docs.microsoft.com/aspnet/core/client-side/bundling-and-minification\r\n// for details on configuring this project to bundle and minify static web assets.\r\n\r\nwindow.navigationFn = {\r\n    goToSection: function (id) {\r\n        $(\"html, body\").animate({\r\n            scrollTop: $(\"#\" + id).offset().top\r\n        }, 0);\r\n    }\r\n};\r\n\r\nwindow.getSelectionText = function getSelectionText() {\r\n    return window.getSelection ? window.getSelection().toString() : \"\";\r\n};\r\n\r\nwindow.writeSelectionLineToInput = function writeSelectionLineToInput(inputId) {\r\n    const textArea = document.getElementById(inputId);\r\n    if (typeof (textArea) !== \"undefined\") {\r\n        const selectionText = getSelectionText();\r\n        if (selectionText) {\r\n            textArea.value += \"[quote]\" + getSelectionText() + \"[/quote]\\n\";\r\n        }\r\n    }\r\n};\r\n\r\nwindow.writeLineToInput = function writeLineToInput(inputId, text) {\r\n    const textArea = document.getElementById(inputId);\r\n    if (typeof (textArea) !== \"undefined\") {\r\n        textArea.value += text + \"\\n\";\r\n    }\r\n};\r\n\r\nwindow.wrapText = function wrapText(inputId, openTag, closeTag) {\r\n    const textArea = document.getElementById(inputId);\r\n    if (typeof (textArea.selectionStart) !== \"undefined\") {\r\n        const begin = textArea.value.substring(0, textArea.selectionStart);\r\n        const selection = textArea.value.substring(textArea.selectionStart, textArea.selectionEnd);\r\n        const end = textArea.value.substring(textArea.selectionEnd);\r\n        textArea.value = begin + openTag + selection + closeTag + end;\r\n    }\r\n};\r\n\r\nwindow.insertTag = function insertTag(inputId, markupButtonId) {\r\n    switch (markupButtonId) {\r\n        case \"m-bold\":\r\n            wrapText(inputId, \"[b]\", \"[/b]\");\r\n            break;\r\n        case \"m-italic\":\r\n            wrapText(inputId, \"[i]\", \"[/i]\");\r\n            break;\r\n        case \"m-underline\":\r\n            wrapText(inputId, \"[u]\", \"[/u]\");\r\n            break;\r\n        case \"m-strikeout\":\r\n            wrapText(inputId, \"[s]\", \"[/s]\");\r\n            break;\r\n        case \"m-quote\":\r\n            wrapText(inputId, \"[quote]\", \"[/quote]\");\r\n            break;\r\n        case \"m-spoiler\":\r\n            wrapText(inputId, \"[spoiler]\", \"[/spoiler]\");\r\n            break;\r\n        case \"m-code\":\r\n            wrapText(inputId, \"[code]\", \"[/code]\");\r\n            break;\r\n        case \"m-subscript\":\r\n            wrapText(inputId, \"[sub]\", \"[/sub]\");\r\n            break;\r\n        case \"m-superscript\":\r\n            wrapText(inputId, \"[sup]\", \"[/sup]\");\r\n            break;\r\n        default:\r\n            break;\r\n    }\r\n};\r\n\r\n$(function () {\r\n    // convert UTC datetime to local datetime\r\n    $(\"time.time-localizable\").each(function () {\r\n        const thisElement = $(this);\r\n        const dateTimeControl = moment(thisElement.attr(\"datetime\"));\r\n        thisElement.text(dateTimeControl.format(\"YYYY-MM-DD ddd HH:mm:ss\"));\r\n    });\r\n\r\n    // if js is enabled and post form exists, prevent href=... and insert >>post id to form\r\n    const inputId = \"Message\";\r\n    if ($(\"#\" + inputId).length) {\r\n        const postIdLink = $(\".post-id-link\");\r\n        postIdLink.attr(\"onclick\", \"return false;\");\r\n        postIdLink.click(function () {\r\n            const thisElement = $(this);\r\n            writeLineToInput(inputId, \">>\" + thisElement.text(), \"\");\r\n            writeSelectionLineToInput(inputId);\r\n            navigationFn.goToSection(inputId);\r\n        });\r\n    }\r\n});\r\n\r\nconst processedForms = new Set();\r\nconst allUtcInputs = document.querySelectorAll('.datetimepicker-utc');\r\n\r\nconst handleSubmit = (event) => {\r\n    const formElement = event.target; // The form that was submitted\r\n\r\n    // Find all relevant inputs *within this specific form*\r\n    const localInputsInForm = formElement.querySelectorAll('.datetimepicker-utc');\r\n\r\n    localInputsInForm.forEach(localInput => {\r\n        const originalName = localInput.name;\r\n        if (!originalName) {\r\n            // Skip if the input has no name (might happen if script runs unexpectedly)\r\n            return;\r\n        }\r\n\r\n        const localValue = localInput.value;\r\n\r\n        if (localValue) {\r\n            const dateObject = new Date(localValue);\r\n\r\n            if (!isNaN(dateObject.getTime())) {\r\n                // Date is valid: convert, create hidden input, swap name\r\n                const utcString = dateObject.toISOString();\r\n\r\n                const utcInput = document.createElement('input');\r\n                utcInput.type = 'hidden';\r\n                utcInput.value = utcString;\r\n                utcInput.name = originalName;\r\n\r\n                formElement.appendChild(utcInput); // Add hidden input to the form\r\n                localInput.removeAttribute('name'); // Remove name from original input\r\n\r\n                console.log(`JS Info: Created hidden input named \"${utcInput.name}\" with UTC value \"${utcString}\". Original input \"${originalName}\" name removed.`);\r\n            } else {\r\n                // Date is invalid: do nothing, let the original input submit\r\n                console.warn(`JS Warning: Invalid date for field named \"${originalName}\". Submitting original value.`);\r\n            }\r\n        } else {\r\n            // Input is empty: do nothing, let the original input submit\r\n            console.log(`JS Info: Field \"${originalName}\" is empty. Submitting as is.`);\r\n        }\r\n    });\r\n    // Form submission continues after this function finishes\r\n};\r\n\r\n// Iterate through all found UTC inputs to identify their forms\r\nallUtcInputs.forEach(input => {\r\n    const form = input.closest('form'); // Find the parent form of the input\r\n\r\n    // If the input is inside a form, and we haven't processed this form yet\r\n    if (form && !processedForms.has(form)) {\r\n        // Add the single submit event listener to this form\r\n        form.addEventListener('submit', handleSubmit);\r\n        // Mark this form as processed so we don't add the listener again\r\n        processedForms.add(form);\r\n        console.log(`JS Setup: Attached UTC date handler to form#${form.id || '[no id]'}.`);\r\n    }\r\n});\r\n"],"names":["window","navigationFn","goToSection","id","$","animate","scrollTop","offset","top","getSelectionText","getSelection","toString","writeSelectionLineToInput","inputId","textArea","document","getElementById","value","writeLineToInput","text","wrapText","openTag","closeTag","begin","substring","selectionStart","selection","selectionEnd","end","insertTag","markupButtonId","each","thisElement","this","dateTimeControl","moment","attr","format","length","postIdLink","click","processedForms","Set","allUtcInputs","querySelectorAll","handleSubmit","event","formElement","target","forEach","localInput","originalName","name","localValue","dateObject","Date","isNaN","getTime","console","warn","utcString","toISOString","utcInput","createElement","type","appendChild","removeAttribute","log","input","form","closest","has","addEventListener","add"],"sourceRoot":""}