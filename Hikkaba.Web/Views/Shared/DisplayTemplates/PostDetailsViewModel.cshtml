@using Hikkaba.Application.Contracts
@using Hikkaba.Shared.Constants
@using Hikkaba.Shared.Services.Contracts
@using Hikkaba.Web.Extensions
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Hikkaba.Web.ViewModels.PostsViewModels.PostDetailsViewModel
@inject IThreadLocalUserHashGenerator ThreadLocalUserHashGenerator
@inject IUserContext UserContext

<div class="row">
    <div class="col-md-12">
        <div class="panel @(Model.IsDeleted ? "panel-danger" : "panel-default") post">
            <div class="panel-heading">
                <h3 class="panel-title post-title">
                    @if (Model.ShowThreadLocalUserHash)
                    {
                        @(ThreadLocalUserHashGenerator.Generate(Model.ThreadId.ToString(), Model.UserIpAddress?.ToString()))
                    }
                    else
                    {
                       @(Defaults.AnonymousUserName)
                    }
                    @if (Model.IsSageEnabled)
                    {
                        <b>SAGE</b>
                    }
                    @Html.DisplayFor(model => model.CreatedAt)
                    @{
                        if (Model.ModifiedAt.HasValue)
                        {
                            <i>&nbsp;(&nbsp;</i><i class="fa fa-pencil" aria-hidden="true"></i><i>&nbsp;@Html.DisplayFor(model => model.ModifiedAt)&nbsp;)</i>
                        }
                    }
                    &nbsp;
                    <a id="@Html.DisplayFor(model => model.Id)" class="post-title post-id-link" href="@Model.GetUri(Url)">@Html.DisplayFor(model => model.Id)</a>
                    &nbsp;
                    @{
                        if (Model.Index > 0)
                        {
                            <span class="post-number">
                                â„–
                                @Html.DisplayFor(model => model.Index)
                            </span>
                        }
                    }
                </h3>
            </div>
            <div class="panel-body post-content">
                @if (Context.User.Identity?.IsAuthenticated == true && UserContext.GetRequiredUser().ModeratedCategories.Contains(Model.CategoryId))
                {
                    <div class="row">
                        <div class="col-md-12">
                            <div class="btn-group thread-moderation-panel" role="group">
                                <form asp-controller="Posts" asp-action="Edit" asp-route-categoryAlias="@Model.CategoryAlias" asp-route-threadId="@Model.ThreadId" asp-route-postId="@Model.Id" method="get" class="display-inline">
                                    <button type="submit" class="btn btn-default">
                                        <i class="fa fa-pencil" aria-hidden="true"></i>
                                        @("Edit")
                                    </button>
                                </form>
                                <form asp-controller="Posts" asp-action="SetIsDeleted" method="post" class="display-inline">
                                    <input name="postId" type="hidden" value="@Model.Id"/>
                                    <input name="isDeleted" type="hidden" value="@((!Model.IsDeleted).ToString())"/>
                                    <button type="submit" class="btn btn-danger">
                                        <i class="@(Model.IsDeleted ? "fa fa-history" : "fa fa-trash")" aria-hidden="true"></i>
                                        @(Model.IsDeleted ? "Restore" : "Delete")
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
                @if (Model.Audio.Any()
                     || Model.Documents.Any()
                     || Model.Notices.Any()
                     || Model.Pictures.Any()
                     || Model.Video.Any())
                {
                    <ul class="list-inline">
                        @Html.DisplayFor(model => model.Audio)
                        @Html.DisplayFor(model => model.Documents)
                        @Html.DisplayFor(model => model.Notices)
                        @Html.DisplayFor(model => model.Pictures)
                        @Html.DisplayFor(model => model.Video)
                    </ul>
                }
                <span class="visible-line-breaks">@Html.Raw(Model.MessageHtml)</span>
            </div>
            @if (Model.Replies.Any())
            {
                <div class="panel-footer">
                    <ul class="list-inline">
                        <li>@Html.DisplayNameFor(model => model.Replies):</li>
                        @foreach (var reply in Model.Replies)
                        {
                            <li>
                                <a href="@Url.Action("Details", "Threads", new {categoryAlias = Model.CategoryAlias,threadId = Model.ThreadId})#@(reply.ToString())">&gt;&gt;@(reply.ToString())</a>
                            </li>
                        }
                    </ul>
                </div>
            }
        </div>
    </div>
</div>
