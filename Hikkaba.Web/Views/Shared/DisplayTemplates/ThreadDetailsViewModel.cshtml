@using Hikkaba.Shared.Services.Contracts
@using Hikkaba.Web.Extensions
@using Hikkaba.Web.Utils.Url
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Hikkaba.Web.ViewModels.ThreadsViewModels.ThreadDetailsViewModel
@inject IUserContext UserContext

<div class="row">
  <div class="col-md-12">
    <div class="card">
      <div class="card-body">
        <h4>
          <b>@Model.Title</b>
          &nbsp;
          @Model.PostCount posts
          &nbsp;
          @Html.DisplayFor(model => model.CreatedAt)
          &nbsp;
          <a class="decoration-on-hover" href="@ThreadUrlUtils.GetThreadDetailsUri(Model, Url)">@Model.Id</a>
          @if (Model.IsPinned)
          {
            <span>&nbsp;</span>
            <i class="bi bi-pin"></i>
          }
          @if (Model.IsClosed)
          {
            <span>&nbsp;</span>
            <i class="bi bi-lock"></i>
          }
          @if (Model.IsCyclic)
          {
            <span>&nbsp;</span>
            <i class="bi bi-infinity"></i>
          }
        </h4>
        @if (Context.User.Identity?.IsAuthenticated == true && UserContext.GetRequiredUser().ModeratedCategories.Contains(Model.CategoryId))
        {
          <div class="row">
            <div class="col-md-12">
              <div class="btn-group thread-moderation-panel" role="group">
                <form asp-route="ThreadSetIsPinned" method="post" class="display-inline">
                  <input name="threadId" type="hidden" value="@Model.Id"/>
                  <input name="isPinned" type="hidden" value="@((!Model.IsPinned).ToString())"/>
                  <button type="submit" class="btn btn-primary">
                    <i class="@(Model.IsPinned ? "fa fa-arrow-down" : "fa fa-thumb-tack")" aria-hidden="true"></i>
                    @(Model.IsPinned ? "Unpin" : "Pin")
                  </button>
                </form>
                <form asp-route="ThreadSetIsClosed" method="post" class="display-inline">
                  <input name="threadId" type="hidden" value="@Model.Id"/>
                  <input name="isClosed" type="hidden" value="@((!Model.IsClosed).ToString())"/>
                  <button type="submit" class="btn btn-warning">
                    <i class="@(Model.IsClosed ? "fa fa-unlock" : "fa fa-lock")" aria-hidden="true"></i>
                    @(Model.IsClosed ? "Open" : "Close")
                  </button>
                </form>
                <form asp-route="ThreadSetIsDeleted" method="post" class="display-inline">
                  <input name="threadId" type="hidden" value="@Model.Id"/>
                  <input name="isDeleted" type="hidden" value="@((!Model.IsDeleted).ToString())"/>
                  <button type="submit" class="btn btn-danger">
                    <i class="@(Model.IsDeleted ? "fa fa-history" : "fa fa-trash")" aria-hidden="true"></i>
                    @(Model.IsDeleted ? "Restore" : "Delete")
                  </button>
                </form>
              </div>
            </div>
          </div>
        }
        @if (Model.Posts.Any())
        {
          <div class="container">
            @for (var i = 0; i < Model.Posts.Count; i++)
            {
              <div class="mt-3 mb-1">
                @Html.DisplayFor(m => m.Posts[i])
              </div>

              @if (i == 0 && Model.PostCount > Model.Posts.Count)
              {
                <div class="mt-2 mb-0">
                  <div class="alert alert-light m-0 pt-1 pb-1" role="alert">
                    @(Model.PostCount - Model.Posts.Count) replies omitted. <a class="alert-link decoration-on-hover" href="@ThreadUrlUtils.GetThreadDetailsUri(Model, Url)">Click here</a> to view.
                  </div>
                </div>
              }
            }
          </div>
        }
      </div>
    </div>
  </div>
</div>
